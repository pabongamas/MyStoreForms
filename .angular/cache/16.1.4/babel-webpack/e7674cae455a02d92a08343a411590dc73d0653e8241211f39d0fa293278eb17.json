{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/honja/OneDrive/Documentos/GitHub/MyStoreForms/MyStoreForms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ref, uploadBytes, listAll, getDownloadURL } from '@angular/fire/storage';\nimport { MyValidators } from './../../../../utils/validators';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./../../../../core/services/categories.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/fire/storage\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/form-field\";\nfunction CategoryFormComponent_div_12_mat_error_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CategoryFormComponent_div_12_mat_error_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Minimo debe tener 4 caracteres \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CategoryFormComponent_div_12_mat_error_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este nombre ya esta siendo utilizado \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CategoryFormComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, CategoryFormComponent_div_12_mat_error_1_Template, 2, 0, \"mat-error\", 9);\n    i0.ɵɵtemplate(2, CategoryFormComponent_div_12_mat_error_2_Template, 2, 0, \"mat-error\", 9);\n    i0.ɵɵtemplate(3, CategoryFormComponent_div_12_mat_error_3_Template, 2, 0, \"mat-error\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nameField.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nameField.hasError(\"minlength\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nameField.hasError(\"not_available\"));\n  }\n}\nfunction CategoryFormComponent_img_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r1.imageField.value, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction CategoryFormComponent_div_17_mat_error_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CategoryFormComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, CategoryFormComponent_div_17_mat_error_1_Template, 2, 0, \"mat-error\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.imageField.hasError(\"required\"));\n  }\n}\nexport let CategoryFormComponent = /*#__PURE__*/(() => {\n  class CategoryFormComponent {\n    constructor(formBuilder, categoriesService, router, storage, activatedRoute) {\n      this.formBuilder = formBuilder;\n      this.categoriesService = categoriesService;\n      this.router = router;\n      this.storage = storage;\n      this.activatedRoute = activatedRoute;\n      this.buildForm();\n    }\n    ngOnInit() {\n      this.activatedRoute.params.subscribe(params => {\n        this.categoryId = params.id;\n      });\n    }\n    buildForm() {\n      this.form = this.formBuilder.group({\n        name: ['', [Validators.required, Validators.minLength(4)], MyValidators.validateCategory(this.categoriesService)],\n        image: ['', Validators.required]\n      });\n    }\n    get nameField() {\n      return this.form.get('name');\n    }\n    get imageField() {\n      return this.form.get('image');\n    }\n    save() {\n      if (this.form.valid) {\n        this.CreateCategory();\n      } else {\n        this.form.markAllAsTouched();\n      }\n    }\n    CreateCategory() {\n      const data = this.form.value;\n      this.categoriesService.createCategory(data).subscribe(rta => {\n        console.log(rta);\n        this.router.navigate(['./admin/categories']);\n      });\n    }\n    getCategory() {}\n    uploadFile(event) {\n      const image = event.target.files[0];\n      const name = image.name;\n      const imgRef = ref(this.storage, `imagenes/${name}`);\n      const task = uploadBytes(imgRef, image);\n      task.then(response => {\n        this.getImage(name);\n      }).catch(error => console.log(error));\n    }\n    getImage(nameImage) {\n      var _this = this;\n      const imgRef = ref(this.storage, 'imagenes');\n      listAll(imgRef).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (rta) {\n          const itemActual = rta.items.find(item => item.name === nameImage);\n          if (itemActual) {\n            const url = yield getDownloadURL(itemActual);\n            _this.imageField.setValue(url);\n          }\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }\n  CategoryFormComponent.ɵfac = function CategoryFormComponent_Factory(t) {\n    return new (t || CategoryFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CategoriesService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.Storage), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n  CategoryFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CategoryFormComponent,\n    selectors: [[\"app-category-form\"]],\n    decls: 21,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-xs\"], [\"placeholder\", \"Nombre\", \"formControlName\", \"name\", \"matInput\", \"\", \"type\", \"text\"], [\"class\", \"messages\", 4, \"ngIf\"], [3, \"src\", 4, \"ngIf\"], [\"type\", \"file\", \"placeholder\", \"Image\", 3, \"change\"], [\"mat-raised-button\", \"\", \"type\", \"submit\"], [1, \"messages\"], [4, \"ngIf\"], [3, \"src\"]],\n    template: function CategoryFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CategoryFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵelementStart(1, \"mat-card\")(2, \"mat-card-header\")(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"Categor\\u00EDa\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"mat-card-content\")(6, \"div\", 1)(7, \"div\", 2)(8, \"mat-form-field\")(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 3);\n        i0.ɵɵtemplate(12, CategoryFormComponent_div_12_Template, 4, 3, \"div\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"div\", 2);\n        i0.ɵɵtemplate(15, CategoryFormComponent_img_15_Template, 1, 1, \"img\", 5);\n        i0.ɵɵelementStart(16, \"input\", 6);\n        i0.ɵɵlistener(\"change\", function CategoryFormComponent_Template_input_change_16_listener($event) {\n          return ctx.uploadFile($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, CategoryFormComponent_div_17_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"mat-card-actions\")(19, \"button\", 7);\n        i0.ɵɵtext(20, \"Guardar categor\\u00EDa\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ctx.nameField.touched && ctx.nameField.invalid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.imageField.value);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.imageField.touched && ctx.imageField.invalid);\n      }\n    },\n    dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.MatButton, i7.MatCard, i7.MatCardActions, i7.MatCardContent, i7.MatCardHeader, i7.MatCardTitle, i8.MatInput, i9.MatFormField, i9.MatLabel, i9.MatError]\n  });\n  return CategoryFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}