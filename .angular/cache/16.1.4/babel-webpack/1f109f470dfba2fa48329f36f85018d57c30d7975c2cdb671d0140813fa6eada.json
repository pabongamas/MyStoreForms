{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { ensureInitialized, getValue as getValue$1, getString as getString$1, getNumber as getNumber$1, getBoolean as getBoolean$1, getAll as getAll$1 } from 'firebase/remote-config';\nfunction parameter$(_a) {\n  var remoteConfig = _a.remoteConfig,\n    key = _a.key,\n    getter = _a.getter;\n  return new Observable(function (subscriber) {\n    ensureInitialized(remoteConfig).then(function () {\n      // 'this' for the getter loses context in the next()\n      // call, so it needs to be bound.\n      var boundGetter = getter.bind(remoteConfig);\n      subscriber.next(boundGetter(remoteConfig, key));\n    });\n  });\n}\nfunction getValue(remoteConfig, key) {\n  var getter = getValue$1;\n  return parameter$({\n    remoteConfig: remoteConfig,\n    key: key,\n    getter: getter\n  });\n}\nfunction getString(remoteConfig, key) {\n  var getter = getString$1;\n  return parameter$({\n    remoteConfig: remoteConfig,\n    key: key,\n    getter: getter\n  });\n}\nfunction getNumber(remoteConfig, key) {\n  var getter = getNumber$1;\n  return parameter$({\n    remoteConfig: remoteConfig,\n    key: key,\n    getter: getter\n  });\n}\nfunction getBoolean(remoteConfig, key) {\n  var getter = getBoolean$1;\n  return parameter$({\n    remoteConfig: remoteConfig,\n    key: key,\n    getter: getter\n  });\n}\nfunction getAll(remoteConfig) {\n  var getter = getAll$1;\n  // No key is needed for getAll()\n  return parameter$({\n    remoteConfig: remoteConfig,\n    key: '',\n    getter: getter\n  });\n}\nexport { getAll, getBoolean, getNumber, getString, getValue };\n//# sourceMappingURL=index.esm.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}