{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { MyValidators } from './../../../../utils/validators';\nlet ProductCreateComponent = class ProductCreateComponent {\n  constructor(formBuilder, productsService, router, storage) {\n    this.formBuilder = formBuilder;\n    this.productsService = productsService;\n    this.router = router;\n    this.storage = storage;\n    this.buildForm();\n  }\n  ngOnInit() {}\n  saveProduct(event) {\n    event.preventDefault();\n    if (this.form.valid) {\n      const product = this.form.value;\n      this.productsService.createProduct(product).subscribe(newProduct => {\n        console.log(newProduct);\n        this.router.navigate(['./admin/products']);\n      });\n    }\n  }\n  uploadFile(event) {\n    const file = event.target.files[0];\n    const name = 'image.png';\n    const fileRef = this.storage.ref(name);\n    const task = this.storage.upload(name, file);\n    task.snapshotChanges().pipe(finalize(() => {\n      this.image$ = fileRef.getDownloadURL();\n      this.image$.subscribe(url => {\n        console.log(url);\n        this.form.get('image').setValue(url);\n      });\n    })).subscribe();\n  }\n  buildForm() {\n    this.form = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      title: ['', [Validators.required]],\n      price: ['', [Validators.required, MyValidators.isPriceValid]],\n      image: [''],\n      description: ['', [Validators.required]]\n    });\n  }\n  get priceField() {\n    return this.form.get('price');\n  }\n};\nProductCreateComponent = __decorate([Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.scss']\n})], ProductCreateComponent);\nexport { ProductCreateComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}