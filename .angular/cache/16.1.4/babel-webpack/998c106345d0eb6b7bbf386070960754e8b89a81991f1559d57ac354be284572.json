{"ast":null,"code":"export class MyValidators {\n  static isPriceValid(control) {\n    const value = control.value;\n    console.log(value);\n    if (value > 10000) {\n      return {\n        price_invalid: true\n      };\n    }\n    return null;\n  }\n  static validatePassword(control) {\n    const value = control.value;\n    if (!containsNumber(value)) {\n      return {\n        invalid_password: true\n      };\n    }\n    return null;\n  }\n  static matchPasswords(control) {\n    const password = control.get('password').value;\n    const confirmPassword = control.get('confirmPassword').value;\n    if (password === confirmPassword) {\n      return null;\n    }\n    return {\n      match_password: true\n    };\n  }\n}\nfunction containsNumber(value) {\n  return value.split('').find(v => isNumber(v)) !== undefined;\n}\nfunction isNumber(value) {\n  return !isNaN(parseInt(value, 10));\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}