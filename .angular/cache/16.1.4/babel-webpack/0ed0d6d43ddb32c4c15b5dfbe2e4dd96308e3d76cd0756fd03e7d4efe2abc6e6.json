{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MyValidators } from './../../../../utils/validators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./../../../../core/services/products/products.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/legacy-button\";\nimport * as i6 from \"@angular/material/legacy-card\";\nimport * as i7 from \"@angular/material/legacy-form-field\";\nimport * as i8 from \"@angular/material/legacy-input\";\nfunction ProductEditComponent_div_14_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"no te debes pasar de 10000\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProductEditComponent_div_14_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"el campo es requerido\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProductEditComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ProductEditComponent_div_14_p_1_Template, 2, 0, \"p\", 5);\n    i0.ɵɵtemplate(2, ProductEditComponent_div_14_p_2_Template, 2, 0, \"p\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.priceField.hasError(\"price_invalid\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.priceField.hasError(\"required\"));\n  }\n}\nexport let ProductEditComponent = /*#__PURE__*/(() => {\n  class ProductEditComponent {\n    constructor(formBuilder, productsService, router, activatedRoute) {\n      this.formBuilder = formBuilder;\n      this.productsService = productsService;\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.buildForm();\n    }\n    ngOnInit() {\n      this.activatedRoute.params.subscribe(params => {\n        this.id = params.id;\n        this.productsService.getProduct(this.id).subscribe(product => {\n          this.form.patchValue(product);\n        });\n      });\n    }\n    saveProduct(event) {\n      event.preventDefault();\n      if (this.form.valid) {\n        const product = this.form.value;\n        this.productsService.updateProduct(this.id, product).subscribe(newProduct => {\n          console.log(newProduct);\n          this.router.navigate(['./admin/products']);\n        });\n      }\n    }\n    buildForm() {\n      this.form = this.formBuilder.group({\n        id: ['', [Validators.required]],\n        title: ['', [Validators.required]],\n        price: ['', [Validators.required, MyValidators.isPriceValid]],\n        image: [''],\n        description: ['', [Validators.required]]\n      });\n    }\n    get priceField() {\n      return this.form.get('price');\n    }\n  }\n  ProductEditComponent.ɵfac = function ProductEditComponent_Factory(t) {\n    return new (t || ProductEditComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.ProductsService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n  ProductEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductEditComponent,\n    selectors: [[\"app-product-edit\"]],\n    decls: 22,\n    vars: 3,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-xs\"], [\"placeholder\", \"Title\", \"formControlName\", \"title\", \"matInput\", \"\", \"type\", \"text\"], [\"placeholder\", \"Price\", \"formControlName\", \"price\", \"matInput\", \"\", \"type\", \"number\"], [4, \"ngIf\"], [\"placeholder\", \"Text\", \"formControlName\", \"description\", \"matInput\", \"\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 3, \"disabled\"]],\n    template: function ProductEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ProductEditComponent_Template_form_ngSubmit_0_listener($event) {\n          return ctx.saveProduct($event);\n        });\n        i0.ɵɵelementStart(1, \"mat-card\")(2, \"mat-card-header\")(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"Producto\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"mat-card-content\")(6, \"div\", 1)(7, \"div\", 2)(8, \"mat-form-field\");\n        i0.ɵɵelement(9, \"input\", 3);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 1)(11, \"div\", 2)(12, \"mat-form-field\");\n        i0.ɵɵelement(13, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, ProductEditComponent_div_14_Template, 3, 2, \"div\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 1)(16, \"div\", 2)(17, \"mat-form-field\");\n        i0.ɵɵelement(18, \"textarea\", 6);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(19, \"mat-card-actions\")(20, \"button\", 7);\n        i0.ɵɵtext(21, \"Guardar\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngIf\", ctx.priceField.errors && ctx.priceField.dirty);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.MatLegacyButton, i6.MatLegacyCard, i6.MatLegacyCardHeader, i6.MatLegacyCardContent, i6.MatLegacyCardTitle, i6.MatLegacyCardActions, i7.MatLegacyFormField, i8.MatLegacyInput]\n  });\n  return ProductEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}