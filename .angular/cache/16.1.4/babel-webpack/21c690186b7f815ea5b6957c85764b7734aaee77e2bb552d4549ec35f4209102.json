{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MyValidators } from './../../../utils/validators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./../../../core/services/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/radio\";\nfunction RegisterComponent_div_18_mat_error_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" debe tener un numero \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterComponent_div_18_mat_error_1_Template, 2, 0, \"mat-error\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.form.get(\"password\").hasError(\"invalid_password\"));\n  }\n}\nfunction RegisterComponent_div_25_mat_error_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" No son iguales \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterComponent_div_25_mat_error_1_Template, 2, 0, \"mat-error\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.hasError(\"match_password\"));\n  }\n}\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(formBuilder, router, authService) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.authService = authService;\n      this.buildForm();\n    }\n    ngOnInit() {}\n    register(event) {\n      event.preventDefault();\n      if (this.form.valid) {\n        const value = this.form.value;\n        this.authService.createUser(value.email, value.password).then(() => {\n          this.router.navigate(['/auth/login']);\n        });\n      }\n    }\n    buildForm() {\n      this.form = this.formBuilder.group({\n        email: ['', [Validators.required]],\n        password: ['', [Validators.required, Validators.minLength(6), MyValidators.validatePassword]],\n        confirmPassword: ['', [Validators.required]],\n        type: ['company', [Validators.required]],\n        companyName: ['', [Validators.required]]\n      }, {\n        validators: MyValidators.matchPasswords\n      });\n    }\n    get typeField() {\n      return this.form.get('type');\n    }\n    get companyNameField() {\n      return this.form.get('companyName');\n    }\n  }\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 42,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outlined\"], [1, \"row\"], [1, \"col-xs\"], [\"placeholder\", \"email\", \"formControlName\", \"email\", \"matInput\", \"\", \"type\", \"email\"], [\"placeholder\", \"password\", \"formControlName\", \"password\", \"matInput\", \"\", \"type\", \"password\"], [4, \"ngIf\"], [\"placeholder\", \"password\", \"formControlName\", \"confirmPassword\", \"matInput\", \"\", \"type\", \"password\"], [\"formControlName\", \"type\", \"aria-label\", \"Select an option\"], [\"value\", \"company\"], [\"value\", \"customer\"], [\"placeholder\", \"company\", \"formControlName\", \"companyName\", \"matInput\", \"\", \"type\", \"text\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 3, \"disabled\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_0_listener($event) {\n          return ctx.register($event);\n        });\n        i0.ɵɵelementStart(1, \"mat-card\", 1)(2, \"mat-card-header\")(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"Registro\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"mat-card-content\")(6, \"div\", 2)(7, \"div\", 3)(8, \"mat-form-field\")(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"div\", 3)(14, \"mat-form-field\")(15, \"mat-label\");\n        i0.ɵɵtext(16, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 5);\n        i0.ɵɵtemplate(18, RegisterComponent_div_18_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\", 2)(20, \"div\", 3)(21, \"mat-form-field\")(22, \"mat-label\");\n        i0.ɵɵtext(23, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 7);\n        i0.ɵɵtemplate(25, RegisterComponent_div_25_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 2)(27, \"div\", 3)(28, \"mat-radio-group\", 8)(29, \"mat-radio-button\", 9);\n        i0.ɵɵtext(30, \"Company\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"mat-radio-button\", 10);\n        i0.ɵɵtext(32, \"Customer\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(33, \"div\", 2)(34, \"div\", 3)(35, \"mat-form-field\")(36, \"mat-label\");\n        i0.ɵɵtext(37, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"input\", 11);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(39, \"mat-card-actions\")(40, \"button\", 12);\n        i0.ɵɵtext(41, \"Registro\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"password\").touched && ctx.form.get(\"password\").invalid);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"confirmPassword\").touched && ctx.form.errors);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      }\n    },\n    dependencies: [i4.NgIf, i5.MatButton, i6.MatCard, i6.MatCardActions, i6.MatCardContent, i6.MatCardHeader, i6.MatCardTitle, i7.MatInput, i8.MatFormField, i8.MatLabel, i8.MatError, i9.MatRadioGroup, i9.MatRadioButton, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"[_nghost-%COMP%]{height:100vh;background-color:#3f51b5;display:block}form[_ngcontent-%COMP%]{width:90%;margin:0 auto;position:relative;top:20px}form[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:100%}form[_ngcontent-%COMP%]   mat-card-actions[_ngcontent-%COMP%]{display:flex;justify-content:center}@media screen and (min-width: 40em) and (max-width: 63.9375em){form[_ngcontent-%COMP%]{position:absolute;top:20%;left:50%;transform:translate(-50%);width:400px}}@media screen and (min-width: 64em){form[_ngcontent-%COMP%]{position:absolute;top:20%;left:50%;transform:translate(-50%);width:400px}}\"]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}